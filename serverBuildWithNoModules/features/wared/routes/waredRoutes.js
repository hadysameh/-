"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const CreateWaredController_1 = __importDefault(require("../controllers/CreateWaredController"));
const EditWaredController_1 = __importDefault(require("../controllers/EditWaredController"));
const MokatbaDetailsPreviewController_1 = __importDefault(require("../controllers/MokatbaDetailsPreviewController"));
const NumberOfUnreadWaredController_1 = __importDefault(require("../controllers/NumberOfUnreadWaredController"));
const WaredBoxController_1 = __importDefault(require("../controllers/WaredBoxController"));
const WaredWithDeadLineController_1 = __importDefault(require("../controllers/WaredWithDeadLineController"));
const express_1 = __importDefault(require("express"));
const multer_1 = require("../../../middelwares/multer");
const auth_1 = require("../../auth");
const UpdateMokatbaOfficersAndBranchesContoller_1 = __importDefault(require("../controllers/UpdateMokatbaOfficersAndBranchesContoller"));
const DeleteWaredController_1 = __importDefault(require("../controllers/DeleteWaredController"));
const WaredTrackingOfficersController_1 = __importDefault(require("../controllers/WaredTrackingOfficersController"));
const WaredOptionsController_1 = __importDefault(require("../controllers/WaredOptionsController"));
const waredRouter = express_1.default.Router();
waredRouter.get("/wared", auth_1.isAuth, MokatbaDetailsPreviewController_1.default.getOne);
waredRouter.get("/wared/waredwithdeadline", auth_1.isAuth, WaredWithDeadLineController_1.default.getAllWaredWithDeadLine);
waredRouter.get("/waredbox/getNumberOfUnreadWared", auth_1.isAuth, NumberOfUnreadWaredController_1.default.getNumberOfUnreadWared);
waredRouter.get("/waredbox/search", auth_1.isAuth, WaredBoxController_1.default.getSearch);
waredRouter.get("/waredoptions", auth_1.isAuth, WaredOptionsController_1.default.get);
waredRouter.get("/waredoptions/getDaysBeforeExecution", auth_1.isAuth, WaredOptionsController_1.default.getDaysBeforeExecution);
waredRouter.post("/waredbox/store", [auth_1.isAuth, multer_1.waredUpload.single("mokatbaPdf")], CreateWaredController_1.default.store);
waredRouter.post("/waredtrackingofficers", auth_1.isAuth, WaredTrackingOfficersController_1.default.store);
waredRouter.put("/waredbox/edit", [auth_1.isAuth, multer_1.waredUpload.single("mokatbaPdf")], EditWaredController_1.default.update);
waredRouter.put("/waredbox/updateOfficersAndBranches", auth_1.isAuth, UpdateMokatbaOfficersAndBranchesContoller_1.default.updateOfficersAndBranches);
waredRouter.delete("/waredbox/deletewared", auth_1.isAuth, DeleteWaredController_1.default.delete);
exports.default = waredRouter;
